name: CI-unix

on:
  push:
    paths:
      - '**.cpp'
      - '**.hpp'
      - '**.h'
      - 'CMakeLists.txt'
      - '.github/workflows/**'
      
  pull_request:
    branches: [ main ]
    paths:
      - '**.cpp'
      - '**.hpp'
      - '**.h'
env:
  BUILD_TYPE: Release
  BUILD_FOLDER: build

jobs:
  build:
    runs-on: ubuntu-latest
    container: gcc:14.1.0

    strategy:
      matrix:
        CXX: [/usr/local/bin/g++, /usr/bin/clang++-14]

    steps:
    - uses: actions/checkout@v4

    - name: Set env RELEASE_VERSION
      run: |
        echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
        echo "NPROC=$(nproc --all)" >> $GITHUB_ENV

    - name: Install package
      run: apt-get update && apt-get -y install cmake valgrind libgtest-dev cppcheck clang-tidy libboost-program-options-dev gcovr

    - name: Add repository to git safe directories
      run: git config --global --add safe.directory $GITHUB_WORKSPACE

    - name: Configure CMake
      working-directory: ${{github.workspace}}
      run: cmake -B ${{env.BUILD_FOLDER}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_COMPILER:FILEPATH=${{ matrix.CXX }}

    - name: Build
      working-directory: ${{github.workspace}}
      run: cmake --build ${{env.BUILD_FOLDER}} --config ${{env.BUILD_TYPE}}
    
    - name: Check 1 -> cppcheck
      working-directory: ${{github.workspace}}
      run: cmake --build ${{env.BUILD_FOLDER}} --target cppcheck

    - name: Test
      working-directory: ${{github.workspace}}
      run: ctest --test-dir ${{env.BUILD_FOLDER}} -C ${{env.BUILD_TYPE}}
      
    - name: Coverage
      run: gcovr -r ../ .

    - name: Memcheck
      working-directory: ${{github.workspace}}
      run: cd ${{env.BUILD_FOLDER}} && ctest -E ".py" --overwrite MemoryCheckCommandOptions="--leak-check=full --error-exitcode=100" -T memcheck

    - name: Create package
      if: startsWith(github.event.ref, 'refs/tags/') &&  matrix.CXX == '/usr/local/bin/g++'
      working-directory: ${{github.workspace}}/${{env.BUILD_FOLDER}}
      run: cpack -G "TGZ;DEB" -D CPACK_PACKAGE_DIRECTORY=/tmp

    - name: Publish the release
      if: startsWith(github.event.ref, 'refs/tags/') &&  matrix.CXX == '/usr/local/bin/g++'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          /tmp/lp-${{ env.RELEASE_VERSION }}-Linux.deb
          /tmp/lp-${{ env.RELEASE_VERSION }}-Linux.deb.sha256
          /tmp/lp-${{ env.RELEASE_VERSION }}-Linux.tar.gz
          /tmp/lp-${{ env.RELEASE_VERSION }}-Linux.tar.gz.sha256